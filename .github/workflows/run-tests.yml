name: Run BDD Tests and Generate Allure Report

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Update permissions to ensure we can push to the repository
permissions:
  contents: write  # Changed from 'read' to 'write' to allow pushing to branches
  pages: write
  id-token: write

# Configure pages deployment environment
env:
  ALLURE_RESULTS_DIR: allure-results
  ALLURE_REPORT_DIR: allure-report

jobs:
  behave-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: true  # Ensure we have credentials for push

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run Behave Tests with Allure
      run: |
        behave -f allure_behave.formatter:AllureFormatter -o ${{ env.ALLURE_RESULTS_DIR }} features/
      continue-on-error: true

    - name: Generate Allure Report
      if: always()
      run: |
        # Install Allure command-line tool
        curl -o allure-commandline.tgz -OLs https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.24.0/allure-commandline-2.24.0.tgz
        tar -zxvf allure-commandline.tgz
        export PATH=$PATH:$(pwd)/allure-2.24.0/bin
        
        # Generate the report
        allure generate ${{ env.ALLURE_RESULTS_DIR }} -o ${{ env.ALLURE_REPORT_DIR }} --clean

    # We'll skip the configure-pages step since it's failing
    # and use a direct git-based deployment approach
    
    - name: Deploy to GitHub Pages
      if: success() || failure()
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
        # Create a temporary branch and copy the report
        git checkout --orphan gh-pages-temp
        git rm -rf .
        cp -r ${{ env.ALLURE_REPORT_DIR }}/* .
        
        # Make sure there's at least one file for git to commit
        touch .nojekyll
        
        # Commit and push to gh-pages
        git add .
        git commit -m "Update Allure report"
        git push -f origin gh-pages-temp:gh-pages 