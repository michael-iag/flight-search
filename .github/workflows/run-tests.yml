name: Run BDD Tests and Generate Allure Report

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Add permissions required for github pages
permissions:
  contents: read
  pages: write
  id-token: write

# Configure pages deployment environment
env:
  ALLURE_RESULTS_DIR: allure-results
  ALLURE_REPORT_DIR: allure-report

jobs:
  behave-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run Behave Tests with Allure
      run: |
        behave -f allure_behave.formatter:AllureFormatter -o ${{ env.ALLURE_RESULTS_DIR }} features/
      continue-on-error: true

    - name: Generate Allure Report
      if: always()
      run: |
        # Install Allure command-line tool
        curl -o allure-commandline.tgz -OLs https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.24.0/allure-commandline-2.24.0.tgz
        tar -zxvf allure-commandline.tgz
        export PATH=$PATH:$(pwd)/allure-2.24.0/bin
        
        # Generate the report
        allure generate ${{ env.ALLURE_RESULTS_DIR }} -o ${{ env.ALLURE_REPORT_DIR }} --clean

    # Add GitHub Pages configuration
    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Deploy to GitHub Pages
      if: success() || failure()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./${{ env.ALLURE_REPORT_DIR }}
        publish_branch: gh-pages  # The branch the report will be deployed to
        force_orphan: true  # Use this to only keep the latest report 